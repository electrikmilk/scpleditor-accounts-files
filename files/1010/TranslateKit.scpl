@Icon globe
@Color darkorange
Comment "Made by @electricmilk on RoutineHub\n\nQuestions? Leave feedback on RoutineHub or message me @brandon on the RountineHub Discord."
Dictionary {"Shortcut Name": TranslateKit, "Current Version": "2.0.0", "RoutineHub ID": "2691"} -> mv:Dictionary
GetCurrentIPAddress
Count Items
If input=Equals value=0
	GetVariable s:shortcutinput
	GetDictionaryfromInput
	GetDictionaryValue get=Value key=text
	SetVariable result
	GetVariable s:shortcutinput
		Count Items
		If input=Equals value=0
		    ShowAlert "No Connection" "TranslateKit requires an internet connnection." false
		end
Otherwise
	GetFile showDocumentPicker=false filePath="translatekit/" errorIfNotFound=false
	Count Items
	If input=Equals value=0
		CreateFolder path="translatekit/"
		CreateFolder path="translatekit/\(mv:Dictionary."RoutineHub ID")"
		GetVariable mv:Dictionary
		GetType
		DetectLanguagewithMicrosoft
		SaveFile service="iCloud Drive" askWheretoSave=false destinationPath="translatekit/\(mv:Dictionary."RoutineHub ID")/lang.txt" overwriteIfFileExists=true -> mv:detectlang
		Text mv:Dictionary."RoutineHub ID"
		SaveFile service="iCloud Drive" askWheretoSave=false destinationPath="translatekit/TranslateKit.txt" overwriteIfFileExists=true
		GetVariable s:shortcutinput
		Count Items
		If input=Equals value=0
			Text "Welcome to TranslateKit"
			TranslateTextwithMicrosoft from=English to=mv:detectlang -> mv:WelcomeTitle
			Text "It might take a moment to set things up. Press 'OK' to continue."
			TranslateTextwithMicrosoft from=English to=mv:detectlang -> mv:WelcomeMessage
			ShowAlert title=mv:WelcomeTitle message=mv:WelcomeMessage false
		End
	End
	GetFile showDocumentPicker=false filePath="translatekit/localizations" errorIfNotFound=false
	Count Items
	If input=Equals value=0
		CreateFolder path="translatekit/localizations"
		GetFile showDocumentPicker=false filePath="translatekit/\(mv:Dictionary."RoutineHub ID")/lang.txt" errorIfNotFound=false -> mv:storedlang
		TranslateTextwithMicrosoft to=English -> mv:locallang
		URL "https://whatzup.com/translations/localizations/\(mv:locallang).json"
		GetContentsofURL
		SaveFile service="iCloud Drive" askWheretoSave=false destinationPath="translatekit/localizations/\(mv:storedlang).json" overwriteIfFileExists=true
		URL "https://whatzup.com/translations/languages.json"
		GetContentsofURL
		SaveFile service="iCloud Drive" askWheretoSave=false destinationPath="translatekit/localizations/languages.json" overwriteIfFileExists=true
		URL "https://whatzup.com/translations/flags.json"
		GetContentsofURL
		SaveFile service="iCloud Drive" askWheretoSave=false destinationPath="translatekit/localizations/flags.json" overwriteIfFileExists=true
	End
	GetVariable s:shortcutinput
	Count Items
	If input=Equals value=0
		Dictionary {shortcut_name: TranslateKit, shortcut_id: "2691"}
		RunShortcut shortcut=TranslateKit showWhileRunning=false
		Dictionary {shortcut_name: TranslateKit, shortcut_id: "2691", text: {MenuPrompt: "TranslateKit \(mv:Dictionary."Current Version")", FirstMenuItem: "Manage Language Selections", SecondMenuItem: "Example Shortcut", FourthItem: "Reset TranslateKit", ThirdMenuItem: "Check for Updates", NoNewUpdates: "No new updates", NoUpdateMessage: "TranslateKit has no new updates at this time.", UpdateTitle: "UpdateKit Required", UpdateMessage: "TranslateKit requires UpdateKit to check for updates. Press 'OK' to install UpdateKit.", ConfirmTitle: Confirm, Confirm: "Clear language selection for", ChooseShortcut: "Choose shortcut", ClearSelection: "Clear selection and cache", GoBack: "Go back", NoneSetup: "No shortcuts setup", SetupMessage: "There are no shortcuts setup with TranslateKit on this device. You may need to run the shortcut you are trying to clear again.", Required: Required, Hasbeengiven: "has been given.", No: No, SelectedLang: "Selected language", cachedTrans: "cached translations", ResetMessage: "This will clear all language selections and localization files. "}}
		RunShortcut shortcut=TranslateKit showWhileRunning=false -> mv:TranslateKit
		GetVariable mv:TranslateKit{as: dictionary}
		SetVariable dictkit
		ChoosefromMenu prompt=v:dictkit.MenuPrompt items=[v:dictkit.FirstMenuItem, v:dictkit.SecondMenuItem, v:dictkit.ThirdMenuItem, v:dictkit.FourthItem]
		Case
			GetFile showDocumentPicker=false filePath="translatekit/" errorIfNotFound=false -> mv:"Get File11"
			Count Items
			If input=Equals value=0
				ShowAlert title=v:dictkit.NoneSetup message=v:dictkit.SetupMessage showCancelButton=false
				Nothing
				RunShortcut shortcut=TranslateKit showWhileRunning=false
			Otherwise
				GetVariable mv:"Get File11"
				ChoosefromList prompt=v:dictkit.ChooseShortcut -> mv:"Choose from List"
				GetFile service="iCloud Drive" showDocumentPicker=false filePath="translatekit/\(mv:"Choose from List")/translations" errorIfNotFound=false
				Count Items -> mv:transcount
				GetFile service="iCloud Drive" showDocumentPicker=false filePath="translatekit/\(mv:"Choose from List")/lang.txt" errorIfNotFound=false -> mv:selectedlang
				Text "\(mv:"Choose from List"{as: file, get: name})\n———————————\n\(v:dictkit.SelectedLang): \(mv:selectedlang)\n\(mv:transcount) \(v:dictkit.cachedTrans)" -> mv:describeshortcut
				ChoosefromMenu prompt=mv:describeshortcut items=[v:dictkit.ClearSelection, v:dictkit.GoBack]
				Case
					ShowAlert title=v:dictkit.ConfirmTitle message="\(v:dictkit.Confirm) \(mv:"Choose from List"{as: file, get: name})?"
					CreateFolder path="translatekit/\(mv:"Choose from List")/"
					DeleteFiles false
					GetVariable mv:"Choose from List"
					DeleteFiles false
					Nothing
					RunShortcut shortcut=TranslateKit showWhileRunning=false
				Case
					Nothing
					RunShortcut shortcut=TranslateKit showWhileRunning=false
				End
			End
		Case
			URL "https://routinehub.co/shortcut/2742"
			OpenURLs
		Case
			GetMyShortcuts
			If value=UpdateKit
				GetVariable mv:Dictionary
				RunShortcut shortcut=UpdateKit showWhileRunning=false
				GetDictionaryValue key="Exit Mode"
				If input=Equals value="Up To Date"
					ShowAlert title=v:dictkit.NoNewUpdates message=v:dictkit.NoUpdateMessage showCancelButton=false
					Nothing
					RunShortcut shortcut=TranslateKit showWhileRunning=false
				End
			Otherwise
				ShowAlert title=v:dictkit.UpdateTitle message=v:dictkit.UpdateMessage
				URL "http://www.mikebeas.com/updatekit/"
				OpenURLs
			End
		Case
			ShowAlert title=v:dictkit.ConfirmTitle message=v:dictkit.ResetMessage
			CreateFolder path=translatekit
			DeleteFiles false
			Nothing
			RunShortcut shortcut=TranslateKit showWhileRunning=false
		End
	Otherwise
		GetFile showDocumentPicker=false filePath="translatekit/\(mv:Dictionary."RoutineHub ID")/lang.txt" errorIfNotFound=false -> mv:kitlang1
		GetFile showDocumentPicker=false filePath="translatekit/localizations/\(mv:kitlang1).json" errorIfNotFound=false
		SetVariable menulocal
		GetFile showDocumentPicker=false filePath="translatekit/localizations/languages.json" errorIfNotFound=false
		SetVariable langlist
		GetFile showDocumentPicker=false filePath="translatekit/localizations/flags.json" errorIfNotFound=false
		SetVariable flags
		GetVariable s:shortcutinput
		GetDictionaryfromInput
		GetDictionaryValue get=Value key=shortcut_id
		SetVariable id
		GetVariable s:shortcutinput
		GetDictionaryfromInput
		GetDictionaryValue get=Value key=shortcut_name
		SetVariable name
		GetVariable s:shortcutinput
		GetDictionaryfromInput
		GetDictionaryValue get=Value key=text
		Count Items
		If input=Equals value=0
			GetVariable s:shortcutinput
			GetDictionaryfromInput
			GetDictionaryValue get=Value key=url -> mv:jsonURL
			Count Items
			If input="Is Greater Than" number=0 value=0
				GetFile service="iCloud Drive" showDocumentPicker=false filePath=mv:jsonURL errorIfNotFound=false
			Otherwise
				Nothing
			End
		Otherwise
			GetVariable s:shortcutinput
			GetDictionaryfromInput
			GetDictionaryValue get=Value key=text
		End
		SetVariable text
		GetVariable s:shortcutinput
		GetDictionaryfromInput
		GetDictionaryValue get=Value key=progress
		SetVariable progress
		GetVariable s:shortcutinput
		GetDictionaryfromInput
		GetDictionaryValue get=Value key=offline
		SetVariable offline
		GetVariable s:shortcutinput
		GetDictionaryfromInput
		GetDictionaryValue get=Value key=identifier
		SetVariable identifier
		GetFile showDocumentPicker=false filePath="translatekit/\(v:id)/lang.txt" errorIfNotFound=false -> mv:"Get File2"
		SetVariable lang
		GetVariable v:id
		Count Items
		If input=Equals value=0
			Text "Dictionary Error"
			TranslateTextwithMicrosoft from=English to=mv:kitlang1 -> mv:ErrorTitle
			Text "key in dictionary."
			TranslateTextwithMicrosoft from=English to=mv:kitlang1 -> mv:ErrorMessage
			Text No
			TranslateTextwithMicrosoft from=English to=mv:kitlang1 -> mv:No
			ShowAlert title=mv:ErrorTitle message="\(mv:No) 'shortcut_id' \(mv:ErrorMessage)" showCancelButton=false
			ExitShortcut
		Otherwise
			GetVariable v:name
			Count Items
			If input=Equals value=0
				Text "Dictionary Error"
				TranslateTextwithMicrosoft from=English to=mv:kitlang1 -> mv:ErrorTitle1
				Text "key in dictionary."
				TranslateTextwithMicrosoft from=English to=mv:kitlang1 -> mv:ErrorMessage1
				Text No
				TranslateTextwithMicrosoft from=English to=mv:kitlang1 -> mv:No1
				ShowAlert title=mv:ErrorTitle1 message="\(mv:No1) 'shortcut_name' \(mv:ErrorMessage1)" showCancelButton=false
				ExitShortcut
			Otherwise
				GetFile showDocumentPicker=false filePath="translatekit/\(v:id)/translations" errorIfNotFound=false
				Count Items
				If input=Equals value=0
					CreateFolder path="translatekit/\(v:id)/translations"
				End
				GetVariable v:text
				Count Items
				If input=Equals value=0
					GetVariable v:lang
					Count Items
					If input=Equals value=0
						Text "Afrikaans\nArabic\nBangla\nBosnian\nBulgarian\nCantonese (Traditional)\nCatalan\nChinese Simplified\nChinese Traditional\nCroatian\nCzech\nDanish\nDutch\nEnglish\nEstonian\nFijian\nPhilippines\nFinnish\nFrench\nGerman\nGreek\nHaitian Creole\nHebrew\nHindi\nHmong Daw\nHungarian\nIcelandic\nIndonesian\nItalian\nJapanese\nSwahili\nKorean\nLatvian\nLithuanian\nMalagasy\nMaltese\nNorwegian\nPersian\nPolish\nPortuguese\nQuerétaro Otomi\nRomanian\nRussian\nSamoan\nSerbian (Cyrillic)\nSerbian (Latin)\nSlovak\nSlovenian\nSpanish\nSwedish\nTahitian\nTamil\nTelugu\nThai\nTongan\nTurkish\nUkrainian\nUrdu\nVietnamese\nWelsh\nYucatec Maya"
						SplitText
						RepeatwithEach
							GetVariable v:menulocal{as: dictionary}
							GetDictionaryValue get=Value key=v:"Repeat Item"
							SetVariable reallang
							GetVariable v:langlist
							GetDictionaryValue get=Value key=v:"Repeat Item"
							SetVariable language
							GetVariable v:flags{as: dictionary}
							GetDictionaryValue get=Value key=v:"Repeat Item"
							SetVariable flag
							Text "BEGIN:VCARD\nVERSION:3.0\nN;CHARSET=utf-8:\(v:language);;;;\nORG:\(v:reallang);\nPHOTO;ENCODING=b:\(v:flag)\nEND:VCARD"
							AddtoVariable langs
						End
						Text v:langs
						SetName name="langs.vcf" -> mv:"Set Name"
						GetVariable mv:"Set Name"{as: contact}
						ChoosefromList prompt="\(v:menulocal.Prompt) \(v:name)" selectMultiple=false -> mv:"Choose from List1"
						GetVariable v:id
						SaveFile askWheretoSave=false destinationPath="translatekit/\(v:name).txt" overwriteIfFileExists=false
						CreateFolder path="translatekit/\(v:id)"
						Text mv:"Choose from List1"{as: contact, get: company}
						Count Characters
						If input=Equals value=0
							Text mv:"Choose from List1"
						Otherwise
							Text mv:"Choose from List1"{as: contact, get: company} -> mv:selectedlang1
						End
						SaveFile askWheretoSave=false destinationPath="translatekit/\(v:id)/lang.txt" -> mv:"Save File2"
						TranslateTextwithMicrosoft to=English -> mv:"Translate Text with Microsoft1"
						URL "https://whatzup.com/translations/localizations/\(mv:"Translate Text with Microsoft1").json"
						GetContentsofURL
						SaveFile service="iCloud Drive" askWheretoSave=false destinationPath="translatekit/localizations/\(mv:selectedlang1).json" overwriteIfFileExists=true
						GetVariable mv:"Save File2"
					Otherwise
						GetVariable v:lang
					End
				Otherwise
					GetVariable v:progress
					If input=Equals value=1
						GetFile showDocumentPicker=false filePath="translatekit/\(v:id)/translation.json" errorIfNotFound=false
						Count Items
						If input=Equals value=0
							Text Translating
							TranslateTextwithMicrosoft from=English to=v:lang -> mv:TranslatingTitle
							Text "TranslateKit is translating \(v:name), this may take a moment. Please wait and do not stop the shortcut. Press 'OK' to proceed."
							TranslateTextwithMicrosoft from=English to=v:lang -> mv:TranslatingMessage
							ShowAlert title=mv:TranslatingTitle message=mv:TranslatingMessage showCancelButton=false
						End
					End
					GetVariable s:shortcutinput
					GetDictionaryfromInput
					GetDictionaryValue get=Value key=lang
					Count Items
					If input=Equals number=0 value=0
						Nothing
					Otherwise
						GetVariable s:shortcutinput
						GetDictionaryfromInput
						GetDictionaryValue get=Value key=lang
						SetVariable lang
					End
					GetVariable v:text
					GetDictionaryfromInput
					Count Items
					If input=Equals value=0
						GetVariable v:text
						DetectLanguagewithMicrosoft
					Otherwise
						GetVariable v:text
						GetDictionaryfromInput
						DetectLanguagewithMicrosoft
					End
					If input=Equals value=v:lang
						GetVariable v:text
						SetVariable result
					Otherwise
						GetVariable v:text
						GetDictionaryfromInput
						Count Items
						If input=Equals value=0
							GetVariable mv:"Get File2"
							If input=Equals value=v:lang
								GetFile showDocumentPicker=false filePath="translatekit/\(v:id)/translations/\(v:text).txt" errorIfNotFound=false -> mv:"Get File3"
								Count Items
								If input=Equals value=0
									GetVariable v:text
									TranslateTextwithMicrosoft from="Detect Language" to=v:lang
									SetVariable result
									SaveFile askWheretoSave=false destinationPath="translatekit/\(v:id)/translations/\(v:text).txt"
								Otherwise
									GetVariable mv:"Get File3"
									SetVariable result
								End
							Otherwise
								GetVariable v:text
								TranslateTextwithMicrosoft from="Detect Language" to=v:lang
								SetVariable result
							End
							GetVariable v:result
						Otherwise
							GetFile showDocumentPicker=false filePath="translatekit/\(v:id)/original.json" errorIfNotFound=false -> mv:pasttranslation
							GetVariable v:text
							GetDictionaryfromInput -> mv:textdictionary
							GetDictionaryValue get="All Keys"
							RepeatwithEach
								GetVariable mv:pasttranslation
								GetDictionaryValue get=Value key=v:"Repeat Item" -> mv:pastvalue
								GetVariable mv:textdictionary
								GetDictionaryValue get=Value key=v:"Repeat Item"
								If input=Equals value=mv:pastvalue
									Nothing
								Otherwise
									Text failed
									SetVariable match
								End
							End
							GetVariable v:match
							If input=Equals value=failed
								GetVariable v:text
								GetDictionaryfromInput
								SetVariable dict
								SaveFile askWheretoSave=false destinationPath="translatekit/\(v:id)/original.json" overwriteIfFileExists=true
								GetVariable v:dict{as: dictionary, get: keys}
								SplitText
								SetVariable keys
								GetVariable v:dict{as: dictionary, get: values}
								SplitText
								SetVariable values
								GetVariable v:keys
								RepeatwithEach
									GetVariable v:dict
									GetDictionaryValue key=v:"Repeat Item" -> mv:"Get Dictionary Value4"
									GetVariable mv:"Get File2"
									If input=Equals value=v:lang
										GetVariable mv:"Get Dictionary Value4"
										TranslateTextwithMicrosoft from="Detect Language" to=v:lang
										SaveFile askWheretoSave=false destinationPath="translatekit/\(v:id)/translations/\(v:"Repeat Item").txt" overwriteIfFileExists=true
									Otherwise
										GetVariable mv:"Get Dictionary Value4"
										TranslateTextwithMicrosoft from="Detect Language" to=v:lang
									End
									ReplaceText findText="\"" replaceWith="\\\"" caseSensitive=false -> mv:"Replace Text"
									Text "\"\(v:"Repeat Item")\":\"\(mv:"Replace Text")\""
									AddtoVariable returndict
								End
								GetVariable v:returndict
								SplitText
								CombineText separator=Custom custom="," -> mv:"Combine Text"
								Text "{\(mv:"Combine Text")}"
								SetVariable returndict
								GetVariable v:returndict{as: dictionary}
								SaveFile askWheretoSave=false destinationPath="translatekit/\(v:id)/translation.json" overwriteIfFileExists=true
								SetVariable returndict
							Otherwise
								GetFile showDocumentPicker=false filePath="translatekit/\(v:id)/translation.json" errorIfNotFound=false
								SetVariable returndict
							End
							GetVariable v:returndict{as: dictionary}
						End
					End
				End
			End
		End
	End
End
